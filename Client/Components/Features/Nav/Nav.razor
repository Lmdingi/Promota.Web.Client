@rendermode InteractiveServer
@attribute [Authorize]
@inject IAuthService _authService
@inject NavigationManager _nav
@inject JWTAuthenticationStateProvider _AuthStateProvider
@inject IAccessTokenService _AccessTokenService
@inject IAuthService _AuthService
@inject IResourceService _ResourceService

@if (CurrentUser != null && CurrentUser.IsAuthenticated)
{
	<CascadingValue Value="@CurrentUser" Name="CurrentUser">
		<LoginNav></LoginNav>
	</CascadingValue>
}
else
{ 
    <LogoutNav></LogoutNav>
}

@code {
	// props	
	public User? CurrentUser { get; set; }
	// fields

	// methods
	protected override async Task OnInitializedAsync()
	{
		CurrentUser = await _AuthStateProvider.GetCurrentUserState();
	}
}
