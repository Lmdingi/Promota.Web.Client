@inject IAuthService _authService
@inject ILogger<LogoutOption> _logger

<li style="padding: 8px 10px;" >
	<button class="btn btn-outline-danger w-100 text-start py-2" @onclick="Logout">
		<i class="bi bi-box-arrow-right ms-2"></i> Logout
	</button>
</li>

@code {
	[Parameter]
	public EventCallback<Alert> OnNavReload { get; set; }

	private async Task Logout()
	{
		try
		{
			var status = await _authService.Logout();

			if (!status)
			{
				throw new Exception();
			}

			await OnNavReload.InvokeAsync(new Alert("Logout Successful", "You have logged out successfully.", AlertType.Success));		
		}
		catch (InvalidOperationException ex)
		{
			_logger.LogError($"Logout failed: {ex.Message}", ex);
			await OnNavReload.InvokeAsync(new Alert("Logout Failed", ex.Message, AlertType.Error));
		}
		catch (Exception ex)
		{
			_logger.LogError($"Logout failed: {ex.Message}", ex);
			await OnNavReload.InvokeAsync(new Alert("Logout Failed", "An error occurred while trying to log out. Please try again.", AlertType.Error));
		}
    }
}
